name: Build and Deploy Docker Image to EC2

on:
  push:
    branches:
      - main  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v2

     
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

    
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-nginx-image:latest .

      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  
          password: ${{ secrets.DOCKER_PASSWORD }}  
    
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-nginx-image:latest
      #doning ssh
      - name: Set up SSH and login to EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          touch ~/.ssh/known_hosts
          ssh-keyscan -H ubuntu@ec2-65-0-139-84.ap-south-1.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: deploing on EC2
        run: | 
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@ec2-65-0-139-84.ap-south-1.compute.amazonaws.com << 'EOF'
            # SSH into EC2 and pull the image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-nginx-image:latest  # Pull the latest image from Docker Hub

            # Stop any running containers
            docker stop my-nginx-container || true
            docker rm my-nginx-container || true

            # Run the new Docker container with NGINX
            docker run -d --name my-nginx-container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-nginx-image:latest

            # Reload NGINX configuration (if needed)
            docker exec my-nginx-container nginx -s reload
            EOF